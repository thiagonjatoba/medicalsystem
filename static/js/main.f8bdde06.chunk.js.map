{"version":3,"sources":["pages/login/logo.png","config/index.js","services/authService.js","pages/signup/styles.js","pages/signup/index.js","services/api.js","pages/signin/styles.js","pages/signin/index.js","pages/login/index.js","pages/main/index.js","services/service.js","routes.js","App.js","serviceWorker.js","index.js","images/logo.png"],"names":["module","exports","__webpack_require__","p","config","handleResponse","response","text","then","data","JSON","parse","ok","status","window","location","reload","error","message","statusText","Promise","reject","getToken","localStorage","getItem","token","setItem","authHeader","Content-Type","Authorization","Container","styled","div","_templateObject","Form","form","_templateObject2","SignUp","state","username","email","password","handleSignUp","e","preventDefault","alert","_this2","this","react_default","a","createElement","onSubmit","src","Logo","alt","type","placeholder","onChange","setState","target","value","react_router_dom","to","Component","api","axios","create","baseURL","interceptors","request","use","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","headers","concat","abrupt","stop","_x","apply","arguments","styles_templateObject","styles_templateObject2","SignIn","handleSignIn","_this$state","_this","post","sent","props","history","push","t0","styles_Container","styles_Form","withRouter","Login","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","buttonClick","validar","key","defineProperty","user","MensagemInfo","className","require","input","Password_default","es_button","onClick","length","login","senha","requestOptions","method","body","stringify","fetch","Key","autenticar","React","Main","acessar","PrivateRoute","component","rest","objectWithoutProperties","react_router","assign","render","pathname","from","Routes","routes_PrivateRoute","exact","path","App","routes","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f8bdde06.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7408be3c.png\";","export const config = {\r\n    baseURL: \"http://localhost:53887/api\"\r\n};\r\n\r\nexport function handleResponse(response) {\r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                // logout();\r\n                window.location.reload(true);\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        return data;\r\n    });\r\n}","import { config } from '../config';\r\nimport { handleResponse } from '../config';\r\n\r\nexport const TOKEN_KEY = \"token\";\r\nexport const isAuthenticated = () => localStorage.getItem(TOKEN_KEY) !== null;\r\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\r\n\r\nexport const token = token => {\r\n  localStorage.setItem(TOKEN_KEY, token);\r\n};\r\nexport const logout = () => {\r\n  localStorage.removeItem(TOKEN_KEY);\r\n};\r\n\r\nexport function authHeader() {\r\n  // return authorization header with jwt token\r\n  let token = getToken();\r\n\r\n  if (token) {\r\n      return { 'Content-Type': 'application/json', 'Authorization': 'MEDICALSYSTEM ' + token };\r\n  } else {\r\n      return {};\r\n  }\r\n}\r\n\r\nexport const autenticar = (login, senha) => {\r\n  const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ login, senha })\r\n  };\r\n\r\n  return fetch(`${config.baseURL}/seguranca/autenticar`, requestOptions)\r\n      .then(handleResponse)\r\n      .then(user => {\r\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n          // localStorage.setItem('user', JSON.stringify(user));\r\n          window.location = '/main';\r\n          token(user.Key);\r\n\r\n          return user;\r\n      });\r\n}","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div``;\r\n\r\nexport const Form = styled.form``;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Logo from \"../../images/logo.png\";\r\n\r\nimport { Form, Container } from \"./styles\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\"\r\n  };\r\n\r\n  handleSignUp = e => {\r\n    e.preventDefault();\r\n    alert(\"Eu vou te registrar\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Form onSubmit={this.handleSignUp}>\r\n          <img src={Logo} alt=\"Airbnb logo\" />\r\n          {this.state.error && <p>{this.state.error}</p>}\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Nome de usuário\"\r\n            onChange={e => this.setState({ username: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Endereço de e-mail\"\r\n            onChange={e => this.setState({ email: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Senha\"\r\n            onChange={e => this.setState({ password: e.target.value })}\r\n          />\r\n          <button type=\"submit\">Cadastrar grátis</button>\r\n          <hr />\r\n          <Link to=\"/\">Fazer login</Link>\r\n        </Form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;","import axios from \"axios\";\r\nimport { getToken } from \"./authService\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:53887/api\"\r\n});\r\n\r\napi.interceptors.request.use(async config => {\r\n  const token = getToken();\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport default api;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  width: 400px;\r\n  background: #fff;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  img {\r\n    width: 100px;\r\n    margin: 10px 0 40px;\r\n  }\r\n  p {\r\n    color: #ff3333;\r\n    margin-bottom: 15px;\r\n    border: 1px solid #ff3333;\r\n    padding: 10px;\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n  input {\r\n    flex: 1;\r\n    height: 46px;\r\n    margin-bottom: 15px;\r\n    padding: 0 20px;\r\n    color: #777;\r\n    font-size: 15px;\r\n    width: 100%;\r\n    border: 1px solid #ddd;\r\n    &::placeholder {\r\n      color: #999;\r\n    }\r\n  }\r\n  button {\r\n    color: #fff;\r\n    font-size: 16px;\r\n    background: #fc6963;\r\n    height: 56px;\r\n    border: 0;\r\n    border-radius: 5px;\r\n    width: 100%;\r\n  }\r\n  hr {\r\n    margin: 20px 0;\r\n    border: none;\r\n    border-bottom: 1px solid #cdcdcd;\r\n    width: 100%;\r\n  }\r\n  a {\r\n    font-size: 16;\r\n    font-weight: bold;\r\n    color: #999;\r\n    text-decoration: none;\r\n  }\r\n`;","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport Logo from \"../../images/logo.png\";\r\nimport api from \"../../services/api\";\r\n// import { login } from \"../../services/auth\";\r\nimport { token } from \"../../services/authService\";\r\n\r\nimport { Form, Container } from \"./styles\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\"\r\n  };\r\n\r\n  handleSignIn = async e => {\r\n    e.preventDefault();\r\n    const { email, password } = this.state;\r\n    if (!email || !password) {\r\n      this.setState({ error: \"Preencha e-mail e senha para continuar!\" });\r\n    } else {\r\n      try {\r\n        const response = await api.post(\"/seguranca/autenticar\", { email, password });\r\n        // login(response.data.token);\r\n        token(response.data.token);\r\n        this.props.history.push(\"/app\");\r\n      } catch (err) {\r\n        this.setState({\r\n          error:\r\n            \"Houve um problema com o login, verifique suas credenciais.\"\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Form onSubmit={this.handleSignIn}>\r\n          <img src={Logo} alt=\"Airbnb logo\" />\r\n          {this.state.error && <p>{this.state.error}</p>}\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Endereço de e-mail\"\r\n            onChange={e => this.setState({ email: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Senha\"\r\n            onChange={e => this.setState({ password: e.target.value })}\r\n          />\r\n          <button type=\"submit\">Entrar</button>\r\n          <hr />\r\n          <Link to=\"/signup\">Criar conta grátis</Link>\r\n        </Form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SignIn);","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport { Input } from 'antd';\r\nimport \"../../style/Login.css\";\r\nimport { autenticar } from '../../services/authService'\r\nimport Password from 'antd/lib/input/Password';\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: \"\",\r\n            password: \"\",\r\n            MensagemInfo: \"\"\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"form-signin\">\r\n            <img className='logo' src={require('./logo.png')} /><br />\r\n            <br />\r\n            <Input className=\"inputLogin input\" value={this.state.user} placeholder=\"Usuário\" onChange={(e) => { this.onChange(e.target.value, 'user') }} /><br />\r\n            <br />\r\n            <Password className=\"inputLogin input\" value={this.state.password} placeholder=\"Senha\" onChange={(e) => { this.onChange(e.target.value, 'password') }} /><br />\r\n            <br />\r\n            <Button className=\"btn btnLogin\" type=\"primary\" onClick={this.buttonClick}>Entrar</Button><br />\r\n            <div className=\"info\">{this.state.MensagemInfo}</div>\r\n        </div>;\r\n    }\r\n\r\n    buttonClick = () => this.validar();\r\n\r\n    onChange = (value, key) => this.setState({ [key]: value })\r\n\r\n    validar() {\r\n        if (!this.state.user.length > 0 || !this.state.password.length > 0)\r\n            this.setState({ MensagemInfo: \"Preencher os campos.\" })\r\n        else\r\n            autenticar(this.state.user, this.state.password);\r\n\r\n    }\r\n\r\n    // onChange(value, key) {\r\n    //     this.setState((previousState) => {\r\n    //         return this.setState({ [key]: value })\r\n    //     })\r\n    // }\r\n}","import React from 'react';\r\nimport { Button } from 'antd';\r\n// import \"../../style/Login.css\";\r\nimport { acessar } from '../../services/service'\r\n\r\n\r\nexport default class Main extends React.Component {\r\n    render() {\r\n        return <div className=\"form-signin\">\r\n            <Button className=\"btn btnLogin\" type=\"primary\" onClick={this.buttonClick}>Acessar</Button><br />\r\n            {/* <div className=\"info\">{this.state.MensagemInfo}</div> */}\r\n        </div>;\r\n    }\r\n\r\n    buttonClick = () => this.acessar();\r\n\r\n    acessar() {\r\n        acessar();\r\n    }\r\n}","import { token } from \"./authService\";\r\nimport { authHeader } from \"./authService\";\r\nimport { config } from '../config';\r\nimport { handleResponse } from '../config';\r\n\r\nexport const acessar = () => {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        // headers: { 'Content-Type': 'application/json' }\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`${config.baseURL}/operacao/recuperarConvenios`, requestOptions)\r\n        .then(handleResponse)\r\n        .then(user => {\r\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n            // localStorage.setItem('user', JSON.stringify(user));\r\n            window.location = '/signup';\r\n            token(user.Key);\r\n\r\n            return user;\r\n        });\r\n}\r\n\r\nfunction logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('user');\r\n}\r\n\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport { isAuthenticated } from \"./services/authService\";\r\nimport SignUp from \"./pages/signup\";\r\nimport SignIn from \"./pages/signin\";\r\nimport Login from \"./pages/login\";\r\nimport Main from \"./pages/main\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuthenticated() ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                    <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\r\n                )\r\n        }\r\n    />\r\n);\r\n\r\nconst Routes = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <PrivateRoute exact path=\"/\" component={SignIn} />\r\n            <PrivateRoute path=\"/signup\" component={SignUp} />\r\n            <PrivateRoute path=\"/main\" component={Main} />\r\n            {/* <PrivateRoute path=\"/app\" component={() => <h1>App</h1>} /> */}\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"*\" component={() => <h1>Page not found</h1>} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;","// import React, { Component } from 'react';\n// import logo from './logo.svg';\n// import \"antd/dist/antd.css\";\n// import \"./style/Style.css\";\n// import './App.css';\n// import { render } from 'react-dom';\n// import { Provider } from 'react-redux';\n// import Login from './js/containers/login/Login';\n\n// class App extends Component {\n// \trender() {\n// \t\treturn <div><Login /></div>;\n// \t}\n// }\n\nimport \"antd/dist/antd.css\";\n\nimport React from \"react\";\nimport Routes from \"./routes\";\n\nconst App = () => <Routes />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.7408be3c.png\";"],"sourceRoot":""}